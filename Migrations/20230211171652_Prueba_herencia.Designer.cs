// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace reciclapp.db.Migrations
{
    [DbContext(typeof(SSDBContext))]
    [Migration("20230211171652_Prueba_herencia")]
    partial class Prueba_herencia
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entidades.ActividadProyecto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("CostoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("costo_estimado");

                    b.Property<decimal>("CostoReal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("costo_real");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<decimal>("Evaluacion")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("evaluacion");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("FechaDisponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_disponible")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_finalizacion")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime>("FechaInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_inicio")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("IdActividadRuta")
                        .HasColumnType("int")
                        .HasColumnName("id_actividad_ruta");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdEjecutor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_ejecutor");

                    b.Property<int>("IdEstatusProyecto")
                        .HasColumnType("int")
                        .HasColumnName("id_estatus_proyecto");

                    b.Property<int>("IdEstatusPublicacion")
                        .HasColumnType("int")
                        .HasColumnName("id_estatus_publicacion");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdProyecto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_proyecto");

                    b.Property<Guid?>("IdRevisadaPor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_revisada_por");

                    b.Property<Guid>("IdRevisor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_revisor");

                    b.Property<int>("IdRutaProyecto")
                        .HasColumnType("int")
                        .HasColumnName("id_ruta_proyecto");

                    b.Property<int>("IdTipoActividad")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_actividad");

                    b.Property<string>("MonedaCostoEstimado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moneda_costo_estimado")
                        .HasDefaultValueSql("''");

                    b.Property<string>("MonedaCostoReal")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moneda_costo_real")
                        .HasDefaultValueSql("''");

                    b.Property<int>("ProgresoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("progreso_estimado");

                    b.Property<Guid?>("ProyectoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Secuencia")
                        .HasColumnType("int")
                        .HasColumnName("secuencia");

                    b.Property<int>("TiempoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("tiempo_estimado");

                    b.Property<decimal>("TipoCambioCostoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("tipo_cambio_costo_estimado");

                    b.Property<decimal>("TipoCambioCostoReal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("tipo_cambio_costo_real");

                    b.Property<decimal>("TotalArticulos")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("total_articulos");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdActividadRuta");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdEjecutor");

                    b.HasIndex("IdEstatusProyecto");

                    b.HasIndex("IdEstatusPublicacion");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdRevisadaPor");

                    b.HasIndex("IdRevisor");

                    b.HasIndex("IdRutaProyecto");

                    b.HasIndex("IdTipoActividad");

                    b.HasIndex("ProyectoId");

                    b.ToTable("actividades_proyectos");
                });

            modelBuilder.Entity("Entidades.ActividadRutaProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<int>("IdRutaProyecto")
                        .HasColumnType("int")
                        .HasColumnName("id_ruta_proyecto");

                    b.Property<int?>("RutaProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("Secuencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("secuencia");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("RutaProyectoId");

                    b.ToTable("actividades_rutas_proyectos");
                });

            modelBuilder.Entity("Entidades.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("telefono");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModificador");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("Entidades.Administrador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("clave");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("telefono")
                        .HasDefaultValueSql("''");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdGrupo");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("administradores");
                });

            modelBuilder.Entity("Entidades.BitacoraProyecto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comentarios");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<long>("IdActividadProyecto")
                        .HasColumnType("bigint")
                        .HasColumnName("id_actividad_proyecto");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdProyecto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_proyecto");

                    b.Property<int>("IdTipoBitacora")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_bitacora");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_usuario");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdActividadProyecto");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdTipoBitacora");

                    b.HasIndex("IdUsuario");

                    b.ToTable("bitacoras_proyectos");
                });

            modelBuilder.Entity("Entidades.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_publicacion");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("titulo")
                        .HasDefaultValueSql("''");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("chats");
                });

            modelBuilder.Entity("Entidades.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdChat")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_chat");

                    b.Property<Guid?>("IdComentario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_comentario");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comentario")
                        .HasDefaultValueSql("''");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdChat");

                    b.HasIndex("IdComentario");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdUsuario");

                    b.ToTable("comentarios");
                });

            modelBuilder.Entity("Entidades.Moneda", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("id");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("EsLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("es_local")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("TipoCambio")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("tipo_cambio");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("monedas");
                });

            modelBuilder.Entity("Entidades.Personal", b =>
                {
                    b.Property<Guid>("IdPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_publicacion");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_usuario");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("IdPublicacion", "IdUsuario");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdPublicacion", "IdRol")
                        .IsUnique();

                    b.ToTable("personal");
                });

            modelBuilder.Entity("Entidades.Proyecto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("CostoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("costo_estimado");

                    b.Property<decimal>("CostoReal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("costo_real");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<decimal>("Evaluacion")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("evaluacion");

                    b.Property<int>("FaseActual")
                        .HasColumnType("int")
                        .HasColumnName("fase_actual");

                    b.Property<int>("FaseAnterior")
                        .HasColumnType("int")
                        .HasColumnName("fase_anterior");

                    b.Property<int>("FaseSiguiente")
                        .HasColumnType("int")
                        .HasColumnName("fase_siguiente");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaDisponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_disponible")
                        .HasDefaultValueSql("null");

                    b.Property<DateTime>("FechaInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_inicio")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("Gustan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("gustan");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<int>("IdEstatusProyecto")
                        .HasColumnType("int")
                        .HasColumnName("id_estatus_proyecto");

                    b.Property<int>("IdEstatusPublicacion")
                        .HasColumnType("int")
                        .HasColumnName("id_estatus_publicacion");

                    b.Property<Guid>("IdGerente")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_gerente");

                    b.Property<Guid>("IdImagenPrincipal")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_imagen_principal");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdRevisadaPor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_revisada_por");

                    b.Property<Guid>("IdRevisor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_revisor");

                    b.Property<int>("IdRutaProyecto")
                        .HasColumnType("int")
                        .HasColumnName("id_ruta_proyecto");

                    b.Property<int>("IdTipoProyecto")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_proyecto");

                    b.Property<string>("MonedaCostoEstimado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moneda_costo_estimado")
                        .HasDefaultValueSql("''");

                    b.Property<string>("MonedaCostoReal")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moneda_costo_real")
                        .HasDefaultValueSql("''");

                    b.Property<int>("NoGustan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("no_gustan");

                    b.Property<int>("ProgresoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("progreso_estimado");

                    b.Property<int>("ProgresoReal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("progreso_real");

                    b.Property<int>("TiempoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("tiempo_estimado");

                    b.Property<decimal>("TipoCambioCostoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("tipo_cambio_costo_estimado");

                    b.Property<decimal>("TipoCambioCostoReal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasDefaultValue(0m)
                        .HasColumnName("tipo_cambio_costo_real");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("titulo")
                        .HasDefaultValueSql("''");

                    b.Property<decimal>("TotalArticulos")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("total_articulos");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdEstatusProyecto");

                    b.HasIndex("IdEstatusPublicacion");

                    b.HasIndex("IdGerente");

                    b.HasIndex("IdImagenPrincipal");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdRevisadaPor");

                    b.HasIndex("IdRevisor");

                    b.HasIndex("IdRutaProyecto");

                    b.HasIndex("IdTipoProyecto");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("proyectos");
                });

            modelBuilder.Entity("Entidades.Publicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("CostoEstimado")
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasColumnName("costo_estimado");

                    b.Property<decimal>("CostoReal")
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasColumnName("costo_real");

                    b.Property<decimal>("CostoRealTraslado")
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasColumnName("costo_real_traslado");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("direccion");

                    b.Property<string>("DireccionReferencias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("direccion_referencias");

                    b.Property<string>("Dispositivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dispositivo");

                    b.Property<int?>("EstatusPublicacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Evaluacion")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)")
                        .HasColumnName("evaluacion");

                    b.Property<int>("Fase")
                        .HasColumnType("int")
                        .HasColumnName("fase");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaDisponible")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_disponible");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("Gustan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("gustan");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdEstatusPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_estatus_publicacion");

                    b.Property<Guid>("IdImagenPrincipal")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("imagen_principal");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdProyecto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_proyecto");

                    b.Property<Guid>("IdRevisadoPor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("revisada_por");

                    b.Property<Guid>("IdTipoPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_tipo_publicacion");

                    b.Property<string>("MonedaCostoEstimado")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("costo_estimado_moneda");

                    b.Property<string>("MonedaCostoReal")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("moneda_costo_real");

                    b.Property<decimal>("MontoInversion")
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasColumnName("monto_inversion");

                    b.Property<int>("NoGustan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("no_gustan");

                    b.Property<int>("Posicionamiento")
                        .HasColumnType("int")
                        .HasColumnName("posicionamiento");

                    b.Property<Guid?>("ProyectoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RevisadoPorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TiempoEstimado")
                        .HasColumnType("int")
                        .HasColumnName("tiempo_estimado");

                    b.Property<decimal>("TipoCambioCostoEstimado")
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasColumnName("costo_estimado_tipo_cambio");

                    b.Property<decimal>("TipoCambioCostoReal")
                        .HasPrecision(20, 3)
                        .HasColumnType("decimal(20,3)")
                        .HasColumnName("tipo_cambio_costo_real");

                    b.Property<int?>("TipoPublicacionId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("titulo")
                        .HasDefaultValueSql("''");

                    b.Property<int>("TotalArticulos")
                        .HasPrecision(10, 2)
                        .HasColumnType("int")
                        .HasColumnName("total_articulos");

                    b.Property<string>("UltimaDireccionIP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ultima_direccion_ip");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.Property<int>("Vistas")
                        .HasColumnType("int")
                        .HasColumnName("vistas");

                    b.HasKey("Id");

                    b.HasIndex("EstatusPublicacionId");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("RevisadoPorId");

                    b.HasIndex("TipoPublicacionId");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("publicaciones");
                });

            modelBuilder.Entity("Entidades.RastreoPublicacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("comentarios")
                        .HasDefaultValueSql("''");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<int>("EstadoPrevio")
                        .HasColumnType("int")
                        .HasColumnName("estado_previo");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_publicacion");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_usuario");

                    b.Property<int>("SiguienteEstado")
                        .HasColumnType("int")
                        .HasColumnName("proximo_estado");

                    b.Property<long>("TiempoEstimado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("tiempo_estimado");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("rastreo_publicaciones");
                });

            modelBuilder.Entity("Entidades.RecursoPublicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_expiracion");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCatalogo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_catalogo");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<int>("IdEstatusRecurso")
                        .HasColumnType("int")
                        .HasColumnName("id_estatus_recurso");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<int>("IdSecuencia")
                        .HasColumnType("int")
                        .HasColumnName("id_secuencia");

                    b.Property<int>("IdTipoCatalogo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_catalogo");

                    b.Property<int>("IdTipoRecurso")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_recurso");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<int>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("orden");

                    b.Property<long>("Tamaño")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("tamano");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdEstatusRecurso");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdSecuencia");

                    b.HasIndex("IdTipoCatalogo");

                    b.HasIndex("IdTipoRecurso");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RecursosPublicaciones");
                });

            modelBuilder.Entity("Entidades.Secuencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<int>("Incremento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("incremento");

                    b.Property<string>("Prefijo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("prefijo")
                        .HasDefaultValueSql("''");

                    b.Property<long>("Serie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L)
                        .HasColumnName("serie");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.ToTable("secuencias");
                });

            modelBuilder.Entity("Entidades.Tabla", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("id");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid?>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.ToTable("tablas");
                });

            modelBuilder.Entity("Entidades.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundo_apellido");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("clave");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email");

                    b.Property<string>("Email2")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email2");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("estatus");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int")
                        .HasColumnName("id_ciudad");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<int?>("IdProfesion")
                        .HasColumnType("int")
                        .HasColumnName("id_profesion");

                    b.Property<int>("MaximoPublicaciones")
                        .HasColumnType("int")
                        .HasColumnName("max_publicaciones");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Nombre2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundo_nombre");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("perfil");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("telefono");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<string>("UltimaIP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ultima_ip");

                    b.Property<int>("Verificado")
                        .HasColumnType("int")
                        .HasColumnName("verificado");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api");

                    b.HasKey("Id");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdProfesion");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundo_apellido")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("clave");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("direccion")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Email2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email2")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("estatus");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int")
                        .HasColumnName("id_ciudad");

                    b.Property<Guid>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<Guid>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.Property<int?>("IdProfesion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_profesion")
                        .HasDefaultValueSql("null");

                    b.Property<int>("MaximoPublicaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("max_publicaciones");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Nombre2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundo_nombre")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("perfil")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Telefono2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono2")
                        .HasDefaultValueSql("''");

                    b.Property<string>("UltimaIP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ultima_ip");

                    b.Property<int>("Verificado")
                        .HasColumnType("int")
                        .HasColumnName("verificado");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdProfesion");

                    b.HasIndex("Nombre", "Nombre2", "Apellido", "Apellido2")
                        .IsUnique();

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Entidades.Varios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("int")
                        .HasColumnName("id_padre");

                    b.Property<string>("IdTabla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("id_tabla");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("referencia")
                        .HasDefaultValueSql("''");

                    b.Property<string>("VersionAPI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version_api")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdPadre");

                    b.HasIndex("IdTabla", "Descripcion")
                        .IsUnique();

                    b.ToTable("varios");
                });

            modelBuilder.Entity("Entidades.ActividadProyecto", b =>
                {
                    b.HasOne("Entidades.ActividadRutaProyecto", "ActividadRuta")
                        .WithMany()
                        .HasForeignKey("IdActividadRuta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Ejecutor")
                        .WithMany()
                        .HasForeignKey("IdEjecutor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "EstatusProyecto")
                        .WithMany()
                        .HasForeignKey("IdEstatusProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "EstatusPublicacion")
                        .WithMany()
                        .HasForeignKey("IdEstatusPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Proyecto", null)
                        .WithMany("ActividadesProyecto")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "RevisadaPor")
                        .WithMany()
                        .HasForeignKey("IdRevisadaPor")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Revisor")
                        .WithMany()
                        .HasForeignKey("IdRevisor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "RutaProyecto")
                        .WithMany()
                        .HasForeignKey("IdRutaProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "TipoActividad")
                        .WithMany()
                        .HasForeignKey("IdTipoActividad")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId");

                    b.Navigation("ActividadRuta");

                    b.Navigation("Creador");

                    b.Navigation("Ejecutor");

                    b.Navigation("EstatusProyecto");

                    b.Navigation("EstatusPublicacion");

                    b.Navigation("Modificador");

                    b.Navigation("Proyecto");

                    b.Navigation("RevisadaPor");

                    b.Navigation("Revisor");

                    b.Navigation("RutaProyecto");

                    b.Navigation("TipoActividad");
                });

            modelBuilder.Entity("Entidades.ActividadRutaProyecto", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "RutaProyecto")
                        .WithMany()
                        .HasForeignKey("RutaProyectoId");

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("RutaProyecto");
                });

            modelBuilder.Entity("Entidades.Admin", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Grupo");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Administrador", b =>
                {
                    b.HasOne("Entidades.Varios", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("Entidades.BitacoraProyecto", b =>
                {
                    b.HasOne("Entidades.ActividadProyecto", "ActividadProyecto")
                        .WithMany()
                        .HasForeignKey("IdActividadProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "TipoBitacora")
                        .WithMany()
                        .HasForeignKey("IdTipoBitacora")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActividadProyecto");

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Proyecto");

                    b.Navigation("TipoBitacora");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Chat", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Publicacion", "Publicacion")
                        .WithMany("Chats")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Entidades.Comentario", b =>
                {
                    b.HasOne("Entidades.Chat", "Chat")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Comentario", null)
                        .WithMany("Citas")
                        .HasForeignKey("IdComentario")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Moneda", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Personal", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Publicacion", "Publicacion")
                        .WithMany("UsuariosLink")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany("PublicacionesLink")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Publicacion");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Proyecto", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "EstatusProyecto")
                        .WithMany()
                        .HasForeignKey("IdEstatusProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "EstatusPublicacion")
                        .WithMany()
                        .HasForeignKey("IdEstatusPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Gerente")
                        .WithMany()
                        .HasForeignKey("IdGerente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.RecursoPublicacion", "ImagenPrincipal")
                        .WithMany()
                        .HasForeignKey("IdImagenPrincipal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "RevisadaPor")
                        .WithMany()
                        .HasForeignKey("IdRevisadaPor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Revisor")
                        .WithMany()
                        .HasForeignKey("IdRevisor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "RutaProyecto")
                        .WithMany()
                        .HasForeignKey("IdRutaProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "TipoProyecto")
                        .WithMany()
                        .HasForeignKey("IdTipoProyecto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("EstatusProyecto");

                    b.Navigation("EstatusPublicacion");

                    b.Navigation("Gerente");

                    b.Navigation("ImagenPrincipal");

                    b.Navigation("Modificador");

                    b.Navigation("RevisadaPor");

                    b.Navigation("Revisor");

                    b.Navigation("RutaProyecto");

                    b.Navigation("TipoProyecto");
                });

            modelBuilder.Entity("Entidades.Publicacion", b =>
                {
                    b.HasOne("Entidades.Varios", "EstatusPublicacion")
                        .WithMany()
                        .HasForeignKey("EstatusPublicacionId");

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId");

                    b.HasOne("Entidades.Usuario", "RevisadoPor")
                        .WithMany()
                        .HasForeignKey("RevisadoPorId");

                    b.HasOne("Entidades.Varios", "TipoPublicacion")
                        .WithMany()
                        .HasForeignKey("TipoPublicacionId");

                    b.Navigation("Creador");

                    b.Navigation("EstatusPublicacion");

                    b.Navigation("Modificador");

                    b.Navigation("Proyecto");

                    b.Navigation("RevisadoPor");

                    b.Navigation("TipoPublicacion");
                });

            modelBuilder.Entity("Entidades.RastreoPublicacion", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.RecursoPublicacion", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "EstatusRecurso")
                        .WithMany()
                        .HasForeignKey("IdEstatusRecurso")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Secuencia", "Secuencia")
                        .WithMany()
                        .HasForeignKey("IdSecuencia")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "TipoCatalogo")
                        .WithMany()
                        .HasForeignKey("IdTipoCatalogo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "TipoRecurso")
                        .WithMany()
                        .HasForeignKey("IdTipoRecurso")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("EstatusRecurso");

                    b.Navigation("Modificador");

                    b.Navigation("Secuencia");

                    b.Navigation("TipoCatalogo");

                    b.Navigation("TipoRecurso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Secuencia", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Tabla", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.User", b =>
                {
                    b.HasOne("Entidades.Varios", "Ciudad")
                        .WithMany()
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "Profesion")
                        .WithMany()
                        .HasForeignKey("IdProfesion")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Ciudad");

                    b.Navigation("Creador");

                    b.Navigation("Grupo");

                    b.Navigation("Modificador");

                    b.Navigation("Profesion");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.HasOne("Entidades.Varios", "Ciudad")
                        .WithMany()
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "Profesion")
                        .WithMany()
                        .HasForeignKey("IdProfesion")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.Navigation("Ciudad");

                    b.Navigation("Creador");

                    b.Navigation("Grupo");

                    b.Navigation("Modificador");

                    b.Navigation("Profesion");
                });

            modelBuilder.Entity("Entidades.Varios", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Varios", "Padre")
                        .WithMany()
                        .HasForeignKey("IdPadre")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Tabla", "Tabla")
                        .WithMany()
                        .HasForeignKey("IdTabla")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Padre");

                    b.Navigation("Tabla");
                });

            modelBuilder.Entity("Entidades.Chat", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("Entidades.Comentario", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Entidades.Proyecto", b =>
                {
                    b.Navigation("ActividadesProyecto");
                });

            modelBuilder.Entity("Entidades.Publicacion", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("UsuariosLink");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("PublicacionesLink");
                });
#pragma warning restore 612, 618
        }
    }
}
